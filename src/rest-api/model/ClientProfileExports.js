/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ClientProfileExports model module.
 * @module model/ClientProfileExports
 * @version 1.0.0
 */
export class ClientProfileExports {
  /**
   * Constructs a new <code>ClientProfileExports</code>.
   * @alias module:model/ClientProfileExports
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ClientProfileExports</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ClientProfileExports} obj Optional instance to populate.
   * @return {module:model/ClientProfileExports} The populated <code>ClientProfileExports</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ClientProfileExports();
      if (data.hasOwnProperty('displayName'))
        obj.displayName = ApiClient.convertToType(data['displayName'], 'String');
      if (data.hasOwnProperty('panesPlaybackExport'))
        obj.panesPlaybackExport = ApiClient.convertToType(data['panesPlaybackExport'], 'String');
      if (data.hasOwnProperty('exportDestinationType'))
        obj.exportDestinationType = ApiClient.convertToType(data['exportDestinationType'], 'String');
      if (data.hasOwnProperty('exportDestinationTypeLocked'))
        obj.exportDestinationTypeLocked = ApiClient.convertToType(data['exportDestinationTypeLocked'], 'Boolean');
      if (data.hasOwnProperty('functionsPlaybackExportPath'))
        obj.functionsPlaybackExportPath = ApiClient.convertToType(data['functionsPlaybackExportPath'], 'String');
      if (data.hasOwnProperty('functionsPlaybackExportPathCustom'))
        obj.functionsPlaybackExportPathCustom = ApiClient.convertToType(data['functionsPlaybackExportPathCustom'], 'String');
      if (data.hasOwnProperty('functionsPlaybackExportPathCustomLocked'))
        obj.functionsPlaybackExportPathCustomLocked = ApiClient.convertToType(data['functionsPlaybackExportPathCustomLocked'], 'Boolean');
      if (data.hasOwnProperty('exportPrivacyMask'))
        obj.exportPrivacyMask = ApiClient.convertToType(data['exportPrivacyMask'], 'String');
      if (data.hasOwnProperty('exportPrivacyMaskLocked'))
        obj.exportPrivacyMaskLocked = ApiClient.convertToType(data['exportPrivacyMaskLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipFormat'))
        obj.exportVideoClipFormat = ApiClient.convertToType(data['exportVideoClipFormat'], 'String');
      if (data.hasOwnProperty('exportVideoClipFormatLocked'))
        obj.exportVideoClipFormatLocked = ApiClient.convertToType(data['exportVideoClipFormatLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipType'))
        obj.exportVideoClipType = ApiClient.convertToType(data['exportVideoClipType'], 'String');
      if (data.hasOwnProperty('exportVideoClipTypeLocked'))
        obj.exportVideoClipTypeLocked = ApiClient.convertToType(data['exportVideoClipTypeLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipOutputType'))
        obj.exportVideoClipOutputType = ApiClient.convertToType(data['exportVideoClipOutputType'], 'String');
      if (data.hasOwnProperty('exportVideoClipOutputTypeLocked'))
        obj.exportVideoClipOutputTypeLocked = ApiClient.convertToType(data['exportVideoClipOutputTypeLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipTimestamp'))
        obj.exportVideoClipTimestamp = ApiClient.convertToType(data['exportVideoClipTimestamp'], 'String');
      if (data.hasOwnProperty('exportVideoClipTimestampLocked'))
        obj.exportVideoClipTimestampLocked = ApiClient.convertToType(data['exportVideoClipTimestampLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipFrameRate'))
        obj.exportVideoClipFrameRate = ApiClient.convertToType(data['exportVideoClipFrameRate'], 'String');
      if (data.hasOwnProperty('exportVideoClipFrameRateLocked'))
        obj.exportVideoClipFrameRateLocked = ApiClient.convertToType(data['exportVideoClipFrameRateLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipTextsMode'))
        obj.exportVideoClipTextsMode = ApiClient.convertToType(data['exportVideoClipTextsMode'], 'String');
      if (data.hasOwnProperty('exportVideoClipTextsContent'))
        obj.exportVideoClipTextsContent = ApiClient.convertToType(data['exportVideoClipTextsContent'], 'String');
      if (data.hasOwnProperty('exportVideoClipTextsContentLocked'))
        obj.exportVideoClipTextsContentLocked = ApiClient.convertToType(data['exportVideoClipTextsContentLocked'], 'Boolean');
      if (data.hasOwnProperty('exportVideoClipCodecProperties'))
        obj.exportVideoClipCodecProperties = ApiClient.convertToType(data['exportVideoClipCodecProperties'], 'String');
      if (data.hasOwnProperty('exportVideoClipCodecPropertiesLocked'))
        obj.exportVideoClipCodecPropertiesLocked = ApiClient.convertToType(data['exportVideoClipCodecPropertiesLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerFormat'))
        obj.exportSmartClientPlayerFormat = ApiClient.convertToType(data['exportSmartClientPlayerFormat'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerFormatLocked'))
        obj.exportSmartClientPlayerFormatLocked = ApiClient.convertToType(data['exportSmartClientPlayerFormatLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerIncludePlayer'))
        obj.exportSmartClientPlayerIncludePlayer = ApiClient.convertToType(data['exportSmartClientPlayerIncludePlayer'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerIncludePlayerLocked'))
        obj.exportSmartClientPlayerIncludePlayerLocked = ApiClient.convertToType(data['exportSmartClientPlayerIncludePlayerLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerLockForReExport'))
        obj.exportSmartClientPlayerLockForReExport = ApiClient.convertToType(data['exportSmartClientPlayerLockForReExport'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerLockForReExportLocked'))
        obj.exportSmartClientPlayerLockForReExportLocked = ApiClient.convertToType(data['exportSmartClientPlayerLockForReExportLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerEncryptDatabases'))
        obj.exportSmartClientPlayerEncryptDatabases = ApiClient.convertToType(data['exportSmartClientPlayerEncryptDatabases'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerEncryptDatabasesLocked'))
        obj.exportSmartClientPlayerEncryptDatabasesLocked = ApiClient.convertToType(data['exportSmartClientPlayerEncryptDatabasesLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerEncryptPassword'))
        obj.exportSmartClientPlayerEncryptPassword = ApiClient.convertToType(data['exportSmartClientPlayerEncryptPassword'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerEncryptPasswordLocked'))
        obj.exportSmartClientPlayerEncryptPasswordLocked = ApiClient.convertToType(data['exportSmartClientPlayerEncryptPasswordLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerEncryptionStrength'))
        obj.exportSmartClientPlayerEncryptionStrength = ApiClient.convertToType(data['exportSmartClientPlayerEncryptionStrength'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerEncryptionStrengthLocked'))
        obj.exportSmartClientPlayerEncryptionStrengthLocked = ApiClient.convertToType(data['exportSmartClientPlayerEncryptionStrengthLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerGlobalCommentsMode'))
        obj.exportSmartClientPlayerGlobalCommentsMode = ApiClient.convertToType(data['exportSmartClientPlayerGlobalCommentsMode'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerGlobalCommentsModeLocked'))
        obj.exportSmartClientPlayerGlobalCommentsModeLocked = ApiClient.convertToType(data['exportSmartClientPlayerGlobalCommentsModeLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerGlobalCommentsContent'))
        obj.exportSmartClientPlayerGlobalCommentsContent = ApiClient.convertToType(data['exportSmartClientPlayerGlobalCommentsContent'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerGlobalCommentsContentLocked'))
        obj.exportSmartClientPlayerGlobalCommentsContentLocked = ApiClient.convertToType(data['exportSmartClientPlayerGlobalCommentsContentLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerIndividualCommentsMode'))
        obj.exportSmartClientPlayerIndividualCommentsMode = ApiClient.convertToType(data['exportSmartClientPlayerIndividualCommentsMode'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerIndividualCommentsModeLocked'))
        obj.exportSmartClientPlayerIndividualCommentsModeLocked = ApiClient.convertToType(data['exportSmartClientPlayerIndividualCommentsModeLocked'], 'Boolean');
      if (data.hasOwnProperty('exportSmartClientPlayerSignData'))
        obj.exportSmartClientPlayerSignData = ApiClient.convertToType(data['exportSmartClientPlayerSignData'], 'String');
      if (data.hasOwnProperty('exportSmartClientPlayerSignDataLocked'))
        obj.exportSmartClientPlayerSignDataLocked = ApiClient.convertToType(data['exportSmartClientPlayerSignDataLocked'], 'Boolean');
      if (data.hasOwnProperty('exportStillImageFormat'))
        obj.exportStillImageFormat = ApiClient.convertToType(data['exportStillImageFormat'], 'String');
      if (data.hasOwnProperty('exportStillImageFormatLocked'))
        obj.exportStillImageFormatLocked = ApiClient.convertToType(data['exportStillImageFormatLocked'], 'Boolean');
      if (data.hasOwnProperty('exportStillImageTimestamp'))
        obj.exportStillImageTimestamp = ApiClient.convertToType(data['exportStillImageTimestamp'], 'String');
      if (data.hasOwnProperty('exportStillImageTimestampLocked'))
        obj.exportStillImageTimestampLocked = ApiClient.convertToType(data['exportStillImageTimestampLocked'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {String} displayName
 */
ClientProfileExports.prototype.displayName = undefined;

/**
 * Allowed values for the <code>panesPlaybackExport</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.PanesPlaybackExportEnum = {
  /**
   * value: "Available"
   * @const
   */
  available: "Available",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Export function. Value map to display names:  Available=Available   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.PanesPlaybackExportEnum} panesPlaybackExport
 */
ClientProfileExports.prototype.panesPlaybackExport = undefined;

/**
 * Allowed values for the <code>exportDestinationType</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportDestinationTypeEnum = {
  /**
   * value: "ToDisk"
   * @const
   */
  toDisk: "ToDisk",

  /**
   * value: "ToMediaBurner"
   * @const
   */
  toMediaBurner: "ToMediaBurner",

  /**
   * value: "Both"
   * @const
   */
  both: "Both"
};
/**
 * Export to. Value map to display names:  ToDisk=To disk   ToMediaBurner=To media burner   Both=To disk and media burner   
 * @member {module:model/ClientProfileExports.ExportDestinationTypeEnum} exportDestinationType
 */
ClientProfileExports.prototype.exportDestinationType = undefined;

/**
 * Export to (Locked)
 * @member {Boolean} exportDestinationTypeLocked
 */
ClientProfileExports.prototype.exportDestinationTypeLocked = undefined;

/**
 * Allowed values for the <code>functionsPlaybackExportPath</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.FunctionsPlaybackExportPathEnum = {
  /**
   * value: "Default"
   * @const
   */
  _default: "Default",

  /**
   * value: "Custom"
   * @const
   */
  custom: "Custom"
};
/**
 * Export path. Value map to display names:  Default=Default   Custom=Custom   
 * @member {module:model/ClientProfileExports.FunctionsPlaybackExportPathEnum} functionsPlaybackExportPath
 */
ClientProfileExports.prototype.functionsPlaybackExportPath = undefined;

/**
 * Export path - Custom
 * @member {String} functionsPlaybackExportPathCustom
 */
ClientProfileExports.prototype.functionsPlaybackExportPathCustom = undefined;

/**
 * Export path - Custom (Locked)
 * @member {Boolean} functionsPlaybackExportPathCustomLocked
 */
ClientProfileExports.prototype.functionsPlaybackExportPathCustomLocked = undefined;

/**
 * Allowed values for the <code>exportPrivacyMask</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportPrivacyMaskEnum = {
  /**
   * value: "Available"
   * @const
   */
  available: "Available",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Privacy mask. Value map to display names:  Available=Available   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportPrivacyMaskEnum} exportPrivacyMask
 */
ClientProfileExports.prototype.exportPrivacyMask = undefined;

/**
 * Privacy mask (Locked)
 * @member {Boolean} exportPrivacyMaskLocked
 */
ClientProfileExports.prototype.exportPrivacyMaskLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipFormat</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipFormatEnum = {
  /**
   * value: "Available"
   * @const
   */
  available: "Available",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Availability. Value map to display names:  Available=Available   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportVideoClipFormatEnum} exportVideoClipFormat
 */
ClientProfileExports.prototype.exportVideoClipFormat = undefined;

/**
 * Availability (Locked)
 * @member {Boolean} exportVideoClipFormatLocked
 */
ClientProfileExports.prototype.exportVideoClipFormatLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipType</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipTypeEnum = {
  /**
   * value: "Audio"
   * @const
   */
  audio: "Audio",

  /**
   * value: "Video"
   * @const
   */
  video: "Video",

  /**
   * value: "Both"
   * @const
   */
  both: "Both"
};
/**
 * Select content. Value map to display names:  Audio=Audio only   Video=Video only   Both=Audio and video   
 * @member {module:model/ClientProfileExports.ExportVideoClipTypeEnum} exportVideoClipType
 */
ClientProfileExports.prototype.exportVideoClipType = undefined;

/**
 * Select content (Locked)
 * @member {Boolean} exportVideoClipTypeLocked
 */
ClientProfileExports.prototype.exportVideoClipTypeLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipOutputType</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipOutputTypeEnum = {
  /**
   * value: "AVI"
   * @const
   */
  AVI: "AVI",

  /**
   * value: "MKV"
   * @const
   */
  MKV: "MKV"
};
/**
 * Select format. Value map to display names:  AVI=AVI   MKV=MKV   
 * @member {module:model/ClientProfileExports.ExportVideoClipOutputTypeEnum} exportVideoClipOutputType
 */
ClientProfileExports.prototype.exportVideoClipOutputType = undefined;

/**
 * Select format (Locked)
 * @member {Boolean} exportVideoClipOutputTypeLocked
 */
ClientProfileExports.prototype.exportVideoClipOutputTypeLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipTimestamp</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipTimestampEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Include timestamps. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportVideoClipTimestampEnum} exportVideoClipTimestamp
 */
ClientProfileExports.prototype.exportVideoClipTimestamp = undefined;

/**
 * Include timestamps (Locked)
 * @member {Boolean} exportVideoClipTimestampLocked
 */
ClientProfileExports.prototype.exportVideoClipTimestampLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipFrameRate</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipFrameRateEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Reduce frame rate. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportVideoClipFrameRateEnum} exportVideoClipFrameRate
 */
ClientProfileExports.prototype.exportVideoClipFrameRate = undefined;

/**
 * Reduce frame rate (Locked)
 * @member {Boolean} exportVideoClipFrameRateLocked
 */
ClientProfileExports.prototype.exportVideoClipFrameRateLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipTextsMode</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipTextsModeEnum = {
  /**
   * value: "Required"
   * @const
   */
  required: "Required",

  /**
   * value: "Optional"
   * @const
   */
  optional: "Optional",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Manage video texts. Value map to display names:  Required=Required   Optional=Optional   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportVideoClipTextsModeEnum} exportVideoClipTextsMode
 */
ClientProfileExports.prototype.exportVideoClipTextsMode = undefined;

/**
 * Video texts
 * @member {String} exportVideoClipTextsContent
 */
ClientProfileExports.prototype.exportVideoClipTextsContent = undefined;

/**
 * Video texts (Locked)
 * @member {Boolean} exportVideoClipTextsContentLocked
 */
ClientProfileExports.prototype.exportVideoClipTextsContentLocked = undefined;

/**
 * Allowed values for the <code>exportVideoClipCodecProperties</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportVideoClipCodecPropertiesEnum = {
  /**
   * value: "Available"
   * @const
   */
  available: "Available",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Video codec properties. Value map to display names:  Available=Available   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportVideoClipCodecPropertiesEnum} exportVideoClipCodecProperties
 */
ClientProfileExports.prototype.exportVideoClipCodecProperties = undefined;

/**
 * Video codec properties (Locked)
 * @member {Boolean} exportVideoClipCodecPropertiesLocked
 */
ClientProfileExports.prototype.exportVideoClipCodecPropertiesLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerFormat</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerFormatEnum = {
  /**
   * value: "Available"
   * @const
   */
  available: "Available",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Availability. Value map to display names:  Available=Available   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerFormatEnum} exportSmartClientPlayerFormat
 */
ClientProfileExports.prototype.exportSmartClientPlayerFormat = undefined;

/**
 * Availability (Locked)
 * @member {Boolean} exportSmartClientPlayerFormatLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerFormatLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerIncludePlayer</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerIncludePlayerEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Include XProtect Smart Client – Player. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerIncludePlayerEnum} exportSmartClientPlayerIncludePlayer
 */
ClientProfileExports.prototype.exportSmartClientPlayerIncludePlayer = undefined;

/**
 * Include XProtect Smart Client – Player (Locked)
 * @member {Boolean} exportSmartClientPlayerIncludePlayerLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerIncludePlayerLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerLockForReExport</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerLockForReExportEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Prevent re-export. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerLockForReExportEnum} exportSmartClientPlayerLockForReExport
 */
ClientProfileExports.prototype.exportSmartClientPlayerLockForReExport = undefined;

/**
 * Prevent re-export (Locked)
 * @member {Boolean} exportSmartClientPlayerLockForReExportLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerLockForReExportLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerEncryptDatabases</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerEncryptDatabasesEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Password protect data. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerEncryptDatabasesEnum} exportSmartClientPlayerEncryptDatabases
 */
ClientProfileExports.prototype.exportSmartClientPlayerEncryptDatabases = undefined;

/**
 * Password protect data (Locked)
 * @member {Boolean} exportSmartClientPlayerEncryptDatabasesLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerEncryptDatabasesLocked = undefined;

/**
 * Password
 * @member {String} exportSmartClientPlayerEncryptPassword
 */
ClientProfileExports.prototype.exportSmartClientPlayerEncryptPassword = undefined;

/**
 * Password (Locked)
 * @member {Boolean} exportSmartClientPlayerEncryptPasswordLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerEncryptPasswordLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerEncryptionStrength</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerEncryptionStrengthEnum = {
  /**
   * value: "DES56"
   * @const
   */
  dES56: "DES56",

  /**
   * value: "AES128"
   * @const
   */
  aES128: "AES128",

  /**
   * value: "AES192"
   * @const
   */
  aES192: "AES192",

  /**
   * value: "AES256"
   * @const
   */
  aES256: "AES256"
};
/**
 * Encryption strength. Value map to display names:  DES56=56-bit DES   AES128=128-bit AES   AES192=192-bit AES   AES256=256-bit AES   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerEncryptionStrengthEnum} exportSmartClientPlayerEncryptionStrength
 */
ClientProfileExports.prototype.exportSmartClientPlayerEncryptionStrength = undefined;

/**
 * Encryption strength (Locked)
 * @member {Boolean} exportSmartClientPlayerEncryptionStrengthLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerEncryptionStrengthLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerGlobalCommentsMode</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerGlobalCommentsModeEnum = {
  /**
   * value: "Required"
   * @const
   */
  required: "Required",

  /**
   * value: "Optional"
   * @const
   */
  optional: "Optional",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Manage project comment. Value map to display names:  Required=Required   Optional=Optional   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerGlobalCommentsModeEnum} exportSmartClientPlayerGlobalCommentsMode
 */
ClientProfileExports.prototype.exportSmartClientPlayerGlobalCommentsMode = undefined;

/**
 * Manage project comment (Locked)
 * @member {Boolean} exportSmartClientPlayerGlobalCommentsModeLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerGlobalCommentsModeLocked = undefined;

/**
 * Project comment
 * @member {String} exportSmartClientPlayerGlobalCommentsContent
 */
ClientProfileExports.prototype.exportSmartClientPlayerGlobalCommentsContent = undefined;

/**
 * Project comment (Locked)
 * @member {Boolean} exportSmartClientPlayerGlobalCommentsContentLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerGlobalCommentsContentLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerIndividualCommentsMode</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerIndividualCommentsModeEnum = {
  /**
   * value: "Required"
   * @const
   */
  required: "Required",

  /**
   * value: "Optional"
   * @const
   */
  optional: "Optional",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Manage individual camera comments. Value map to display names:  Required=Required   Optional=Optional   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerIndividualCommentsModeEnum} exportSmartClientPlayerIndividualCommentsMode
 */
ClientProfileExports.prototype.exportSmartClientPlayerIndividualCommentsMode = undefined;

/**
 * Manage individual camera comments (Locked)
 * @member {Boolean} exportSmartClientPlayerIndividualCommentsModeLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerIndividualCommentsModeLocked = undefined;

/**
 * Allowed values for the <code>exportSmartClientPlayerSignData</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportSmartClientPlayerSignDataEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Include digital signature. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportSmartClientPlayerSignDataEnum} exportSmartClientPlayerSignData
 */
ClientProfileExports.prototype.exportSmartClientPlayerSignData = undefined;

/**
 * Include digital signature (Locked)
 * @member {Boolean} exportSmartClientPlayerSignDataLocked
 */
ClientProfileExports.prototype.exportSmartClientPlayerSignDataLocked = undefined;

/**
 * Allowed values for the <code>exportStillImageFormat</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportStillImageFormatEnum = {
  /**
   * value: "Available"
   * @const
   */
  available: "Available",

  /**
   * value: "Unavailable"
   * @const
   */
  unavailable: "Unavailable"
};
/**
 * Availability. Value map to display names:  Available=Available   Unavailable=Unavailable   
 * @member {module:model/ClientProfileExports.ExportStillImageFormatEnum} exportStillImageFormat
 */
ClientProfileExports.prototype.exportStillImageFormat = undefined;

/**
 * Availability (Locked)
 * @member {Boolean} exportStillImageFormatLocked
 */
ClientProfileExports.prototype.exportStillImageFormatLocked = undefined;

/**
 * Allowed values for the <code>exportStillImageTimestamp</code> property.
 * @enum {String}
 * @readonly
 */
ClientProfileExports.ExportStillImageTimestampEnum = {
  /**
   * value: "Yes"
   * @const
   */
  yes: "Yes",

  /**
   * value: "No"
   * @const
   */
  no: "No"
};
/**
 * Include timestamps. Value map to display names:  Yes=Yes   No=No   
 * @member {module:model/ClientProfileExports.ExportStillImageTimestampEnum} exportStillImageTimestamp
 */
ClientProfileExports.prototype.exportStillImageTimestamp = undefined;

/**
 * Include timestamps (Locked)
 * @member {Boolean} exportStillImageTimestampLocked
 */
ClientProfileExports.prototype.exportStillImageTimestampLocked = undefined;

