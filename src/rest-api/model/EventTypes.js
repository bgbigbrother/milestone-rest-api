/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {EventTypesRelations} from './EventTypesRelations';

/**
 * The EventTypes model module.
 * @module model/EventTypes
 * @version 1.0.0
 */
export class EventTypes {
  /**
   * Constructs a new <code>EventTypes</code>.
   * Events
   * @alias module:model/EventTypes
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>EventTypes</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventTypes} obj Optional instance to populate.
   * @return {module:model/EventTypes} The populated <code>EventTypes</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EventTypes();
      if (data.hasOwnProperty('displayName'))
        obj.displayName = ApiClient.convertToType(data['displayName'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('lastModified'))
        obj.lastModified = ApiClient.convertToType(data['lastModified'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('generatorType'))
        obj.generatorType = ApiClient.convertToType(data['generatorType'], 'String');
      if (data.hasOwnProperty('generatorSubtype'))
        obj.generatorSubtype = ApiClient.convertToType(data['generatorSubtype'], 'String');
      if (data.hasOwnProperty('generatorName'))
        obj.generatorName = ApiClient.convertToType(data['generatorName'], 'String');
      if (data.hasOwnProperty('generatorID'))
        obj.generatorID = ApiClient.convertToType(data['generatorID'], 'String');
      if (data.hasOwnProperty('generatorGroupName'))
        obj.generatorGroupName = ApiClient.convertToType(data['generatorGroupName'], 'String');
      if (data.hasOwnProperty('generatorGroupId'))
        obj.generatorGroupId = ApiClient.convertToType(data['generatorGroupId'], 'String');
      if (data.hasOwnProperty('occursGlobally'))
        obj.occursGlobally = ApiClient.convertToType(data['occursGlobally'], 'Boolean');
      if (data.hasOwnProperty('builtIn'))
        obj.builtIn = ApiClient.convertToType(data['builtIn'], 'Boolean');
      if (data.hasOwnProperty('counterEventID'))
        obj.counterEventID = ApiClient.convertToType(data['counterEventID'], 'String');
      if (data.hasOwnProperty('sourceArray'))
        obj.sourceArray = ApiClient.convertToType(data['sourceArray'], ['String']);
      if (data.hasOwnProperty('sourceFilterArray'))
        obj.sourceFilterArray = ApiClient.convertToType(data['sourceFilterArray'], ['String']);
      if (data.hasOwnProperty('relations'))
        obj.relations = EventTypesRelations.constructFromObject(data['relations']);
    }
    return obj;
  }
}

/**
 * @member {String} displayName
 */
EventTypes.prototype.displayName = undefined;

/**
 * ID
 * @member {String} id
 */
EventTypes.prototype.id = undefined;

/**
 * Name
 * @member {String} name
 */
EventTypes.prototype.name = undefined;

/**
 * Last modified
 * @member {String} lastModified
 */
EventTypes.prototype.lastModified = undefined;

/**
 * Description
 * @member {String} description
 */
EventTypes.prototype.description = undefined;

/**
 * Originator type
 * @member {String} generatorType
 */
EventTypes.prototype.generatorType = undefined;

/**
 * Originator sub type
 * @member {String} generatorSubtype
 */
EventTypes.prototype.generatorSubtype = undefined;

/**
 * Originator name
 * @member {String} generatorName
 */
EventTypes.prototype.generatorName = undefined;

/**
 * Originator ID
 * @member {String} generatorID
 */
EventTypes.prototype.generatorID = undefined;

/**
 * Originator group name
 * @member {String} generatorGroupName
 */
EventTypes.prototype.generatorGroupName = undefined;

/**
 * Originator group ID
 * @member {String} generatorGroupId
 */
EventTypes.prototype.generatorGroupId = undefined;

/**
 * Occurs globally
 * @member {Boolean} occursGlobally
 */
EventTypes.prototype.occursGlobally = undefined;

/**
 * Built in
 * @member {Boolean} builtIn
 */
EventTypes.prototype.builtIn = undefined;

/**
 * Counter event ID
 * @member {String} counterEventID
 */
EventTypes.prototype.counterEventID = undefined;

/**
 * Source itemtypes. Contains an array of possible sources of the event.  Can contain *Camera*, *Hardware* and other itemtype values. For MIP plugin events the source itemtype is *MIPItem* and the filter contains the MIP Kind of source.  The actual source is selected in the rule and alarm definition configuration.
 * @member {Array.<String>} sourceArray
 */
EventTypes.prototype.sourceArray = undefined;

/**
 * Source filters. Contains an array where the index is matching the sources. Content is formatted as {value} or {type},{value}.  If source is \"MIPItem\" this value is the kind as defined in MIPKind - Like \"3b559f2e-3693-5463-a6fb-005c1f0259dc\". 
 * @member {Array.<String>} sourceFilterArray
 */
EventTypes.prototype.sourceFilterArray = undefined;

/**
 * @member {module:model/EventTypesRelations} relations
 */
EventTypes.prototype.relations = undefined;

