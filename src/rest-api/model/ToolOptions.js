/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ToolOptionsRelations} from './ToolOptionsRelations';

/**
 * The ToolOptions model module.
 * @module model/ToolOptions
 * @version 1.0.0
 */
export class ToolOptions {
  /**
   * Constructs a new <code>ToolOptions</code>.
   * System options
   * @alias module:model/ToolOptions
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ToolOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ToolOptions} obj Optional instance to populate.
   * @return {module:model/ToolOptions} The populated <code>ToolOptions</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ToolOptions();
      if (data.hasOwnProperty('displayName'))
        obj.displayName = ApiClient.convertToType(data['displayName'], 'String');
      if (data.hasOwnProperty('ptzManualSessionTimeoutSec'))
        obj.ptzManualSessionTimeoutSec = ApiClient.convertToType(data['ptzManualSessionTimeoutSec'], 'Number');
      if (data.hasOwnProperty('pausePatrollingTimeoutSec'))
        obj.pausePatrollingTimeoutSec = ApiClient.convertToType(data['pausePatrollingTimeoutSec'], 'Number');
      if (data.hasOwnProperty('ptzReservedSessionTimeoutSec'))
        obj.ptzReservedSessionTimeoutSec = ApiClient.convertToType(data['ptzReservedSessionTimeoutSec'], 'Number');
      if (data.hasOwnProperty('deviceErrorTimeoutSec'))
        obj.deviceErrorTimeoutSec = ApiClient.convertToType(data['deviceErrorTimeoutSec'], 'String');
      if (data.hasOwnProperty('relations'))
        obj.relations = ToolOptionsRelations.constructFromObject(data['relations']);
    }
    return obj;
  }
}

/**
 * @member {String} displayName
 */
ToolOptions.prototype.displayName = undefined;

/**
 * Timeout for manual PTZ sessions (sec). A value in seconds.  Value need to be in hours: e.g. multiple of 3600, or in minutes: multiple of 60, or in seconds: with max value of 999
 * @member {Number} ptzManualSessionTimeoutSec
 */
ToolOptions.prototype.ptzManualSessionTimeoutSec = undefined;

/**
 * Timeout for pause patrolling sessions (sec). A value in seconds.  Value need to be in hours: e.g. multiple of 3600, or in minutes: multiple of 60, or in seconds: with max value of 999
 * @member {Number} pausePatrollingTimeoutSec
 */
ToolOptions.prototype.pausePatrollingTimeoutSec = undefined;

/**
 * Timeout for reserved PTZ sessions (sec). A value in seconds.  Value need to be in hours: e.g. multiple of 3600, or in minutes: multiple of 60, or in seconds: with max value of 999
 * @member {Number} ptzReservedSessionTimeoutSec
 */
ToolOptions.prototype.ptzReservedSessionTimeoutSec = undefined;

/**
 * Allowed values for the <code>deviceErrorTimeoutSec</code> property.
 * @enum {String}
 * @readonly
 */
ToolOptions.DeviceErrorTimeoutSecEnum = {
  /**
   * value: "0"
   * @const
   */
  _0: "0",

  /**
   * value: "5"
   * @const
   */
  _5: "5",

  /**
   * value: "10"
   * @const
   */
  _10: "10",

  /**
   * value: "15"
   * @const
   */
  _15: "15",

  /**
   * value: "30"
   * @const
   */
  _30: "30",

  /**
   * value: "45"
   * @const
   */
  _45: "45",

  /**
   * value: "60"
   * @const
   */
  _60: "60",

  /**
   * value: "120"
   * @const
   */
  _120: "120",

  /**
   * value: "300"
   * @const
   */
  _300: "300"
};
/**
 * Ignore device communication errors for. The number of seconds to pass before logging a device communication error. Legal values are 0,1,5,10,15,30,45,60,120,300. Value map to display names:  0=0   5=5   10=10   15=15   30=30   45=45   60=60   120=120   300=300   
 * @member {module:model/ToolOptions.DeviceErrorTimeoutSecEnum} deviceErrorTimeoutSec
 */
ToolOptions.prototype.deviceErrorTimeoutSec = undefined;

/**
 * @member {module:model/ToolOptionsRelations} relations
 */
ToolOptions.prototype.relations = undefined;

