/*
 * Milestone Integration Platform VMS RESTful API
 * VMS Configuration and control for XProtect
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {RolesRelations} from './RolesRelations';

/**
 * The Roles model module.
 * @module model/Roles
 * @version 1.0.0
 */
export class Roles {
  /**
   * Constructs a new <code>Roles</code>.
   * Role
   * @alias module:model/Roles
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Roles</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Roles} obj Optional instance to populate.
   * @return {module:model/Roles} The populated <code>Roles</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Roles();
      if (data.hasOwnProperty('displayName'))
        obj.displayName = ApiClient.convertToType(data['displayName'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('roleType'))
        obj.roleType = ApiClient.convertToType(data['roleType'], 'String');
      if (data.hasOwnProperty('lastModified'))
        obj.lastModified = ApiClient.convertToType(data['lastModified'], 'String');
      if (data.hasOwnProperty('dualAuthorizationRequired'))
        obj.dualAuthorizationRequired = ApiClient.convertToType(data['dualAuthorizationRequired'], 'Boolean');
      if (data.hasOwnProperty('makeUsersAnonymousDuringPTZSession'))
        obj.makeUsersAnonymousDuringPTZSession = ApiClient.convertToType(data['makeUsersAnonymousDuringPTZSession'], 'Boolean');
      if (data.hasOwnProperty('allowMobileClientLogOn'))
        obj.allowMobileClientLogOn = ApiClient.convertToType(data['allowMobileClientLogOn'], 'Boolean');
      if (data.hasOwnProperty('allowSmartClientLogOn'))
        obj.allowSmartClientLogOn = ApiClient.convertToType(data['allowSmartClientLogOn'], 'Boolean');
      if (data.hasOwnProperty('allowWebClientLogOn'))
        obj.allowWebClientLogOn = ApiClient.convertToType(data['allowWebClientLogOn'], 'Boolean');
      if (data.hasOwnProperty('relations'))
        obj.relations = RolesRelations.constructFromObject(data['relations']);
    }
    return obj;
  }
}

/**
 * @member {String} displayName
 */
Roles.prototype.displayName = undefined;

/**
 * ID
 * @member {String} id
 */
Roles.prototype.id = undefined;

/**
 * Name
 * @member {String} name
 */
Roles.prototype.name = undefined;

/**
 * Description
 * @member {String} description
 */
Roles.prototype.description = undefined;

/**
 * Allowed values for the <code>roleType</code> property.
 * @enum {String}
 * @readonly
 */
Roles.RoleTypeEnum = {
  /**
   * value: "Adminstrative"
   * @const
   */
  adminstrative: "Adminstrative",

  /**
   * value: "UserDefined"
   * @const
   */
  userDefined: "UserDefined"
};
/**
 * Type of role. Value map to display names:  Adminstrative=Adminstrative   UserDefined=UserDefined   
 * @member {module:model/Roles.RoleTypeEnum} roleType
 */
Roles.prototype.roleType = undefined;

/**
 * Last modified
 * @member {String} lastModified
 */
Roles.prototype.lastModified = undefined;

/**
 * Login authorization required
 * @member {Boolean} dualAuthorizationRequired
 */
Roles.prototype.dualAuthorizationRequired = undefined;

/**
 * Make users anonymous during PTZ session
 * @member {Boolean} makeUsersAnonymousDuringPTZSession
 */
Roles.prototype.makeUsersAnonymousDuringPTZSession = undefined;

/**
 * Allow Mobile Client login. Allow members of the role to log in from a Mobile Client
 * @member {Boolean} allowMobileClientLogOn
 */
Roles.prototype.allowMobileClientLogOn = undefined;

/**
 * Allow Smart Client login. Allow members of the role to log in from a Smart Client
 * @member {Boolean} allowSmartClientLogOn
 */
Roles.prototype.allowSmartClientLogOn = undefined;

/**
 * Allow Web Client login. Allow members of the role to log in from a Web Client
 * @member {Boolean} allowWebClientLogOn
 */
Roles.prototype.allowWebClientLogOn = undefined;

/**
 * @member {module:model/RolesRelations} relations
 */
Roles.prototype.relations = undefined;

// Implement RolesBody interface:
